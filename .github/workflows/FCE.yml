name: FCE

on:
  workflow_dispatch:
    inputs:
      url:
        required: true
      get:
        required: true
      track:
        required: false

env:
  URL: ${{ github.event.inputs.url }}
  GET: ${{ github.event.inputs.get }}

jobs:
  FCE:
    name: ${{ github.event.inputs.track }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache tools
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/lib/python3*/site-packages
            tools
          key: ${{ runner.os }}-tools-${{ hashFiles('**/tools/*') }}
          restore-keys: |
            ${{ runner.os }}-tools-

      - name: Install tools
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip p7zip-full aria2
          git clone https://github.com/vm03/payload_dumper.git tools
          aria2c -o erofs-utils.zip https://github.com/sekaiacg/erofs-utils/releases/download/v1.8.1-240810/erofs-utils-v1.8.1-gddbed144-Linux_x86_64-2408101422.zip
          7z x erofs-utils.zip -otools
          pip install -r ./tools/requirements.txt
          rm -f erofs-utils.zip

      - name: Download ZIP
        run: |
          aria2c -x 7 -s 7 -k 1M --continue --out=rom.zip "$URL"
          7z x rom.zip -o./
          rm rom.zip

      - name: Extract image based on input
        id: extract
        run: |
          rom_name=$(basename "$URL" .zip)
          image_name="${GET%.img}"

          if [ -f "${GET}.img" ]; then
            echo "::set-output name=skip::true"
            echo "Using existing ${GET}.img"
          elif [ -f "boot.img" ] && [ "$GET" = "boot_img" ]; then
            echo "::set-output name=skip::true"
            echo "Found boot.img in ZIP"
          elif [ -f "payload.bin" ]; then
            ./tools/payload_dumper.py --out . --images "${GET%.img}" payload.bin
            echo "::set-output name=skip::false"
          else
            echo "❌ payload.bin or direct image not found. Exiting."
            exit 1
          fi

          if [ -f "${GET%.img}.img" ]; then
            7z a "${GET}_${rom_name}.zip" "${GET%.img}.img"
          else
            echo "❌ ${GET}.img not extracted."
            exit 1
          fi

          echo "filename=${GET}_${rom_name}.zip" >> $GITHUB_ENV

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.get }}
          files: ${{ env.filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Success summary
        run: echo "✔️ Uploaded ${{ env.filename }} to GitHub Release."
