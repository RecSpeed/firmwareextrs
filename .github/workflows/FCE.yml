name: FCE

on:
  workflow_dispatch:
    inputs:
      url:
        required: true
      track:
        required: false
      get:
        required: true

env:
  URL: ${{ github.event.inputs.url }}
  GET: ${{ github.event.inputs.get }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  FCE:
    name: ${{ github.event.inputs.track }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip p7zip-full aria2
          git clone https://github.com/vm03/payload_dumper.git tools
          pip install -r ./tools/requirements.txt

      - name: Download Firmware
        run: |
          aria2c -x 7 -s 7 -k 1M --continue --max-tries=0 --out='firmware.zip' "$URL"
          7z x firmware.zip -o./ || true
          rm -f firmware.zip

      - name: Extract Images
        run: |
          if [ -f "payload.bin" ]; then
            echo "payload.bin found, extracting..."
            ./tools/payload_dumper.py --out . --images boot,recovery payload.bin
          else
            echo "payload.bin not found"
          fi

      - name: Create ZIP
        run: |
          rom_name=$(basename "$URL" .zip)
          mkdir -p release
          if [ "$GET" = "boot_img" ] && [ -f "boot.img" ]; then
            7z a "./release/boot_img_${rom_name}.zip" boot.img
          elif [ "$GET" = "recovery_img" ] && [ -f "recovery.img" ]; then
            7z a "./release/recovery_img_${rom_name}.zip" recovery.img
          else
            echo "Requested image not found"

            FILE="v.json"
            NEW_ENTRY='"'${rom_name}'": {
              "'${GET}'_zip": "false"
            }'

            if [ ! -f "$FILE" ]; then
              echo -e "{\n$NEW_ENTRY\n}" > "$FILE"
            else
              sed -i '$d' "$FILE"
              echo -e ",\n$NEW_ENTRY\n}" >> "$FILE"
            fi

            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add v.json
            git commit -m "mark failure for $rom_name"
            git push

            exit 1
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: auto
          name: Auto Firmware Extracts
          files: release/*.zip

      - name: Update v.json
        run: |
          rom_name=$(basename "$URL" .zip)
          FILE="v.json"
          link="https://github.com/RecSpeed/firmwareextrs/releases/download/auto/${GET}_${rom_name}.zip"

          NEW_ENTRY='"'${rom_name}'": {
            "'${GET}'_zip": "true",
            "'${GET}'_link": "'${link}'"
          }'

          if [ ! -f "$FILE" ]; then
            echo -e "{\n$NEW_ENTRY\n}" > "$FILE"
          else
            sed -i '$d' "$FILE"
            echo -e ",\n$NEW_ENTRY\n}" >> "$FILE"
          fi

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add v.json
          git commit -m "update $GET for $rom_name"
          git push
