name: FCE

on:
  workflow_dispatch:
    inputs:
      url:
        required: true
      track:
        required: false
      image_type:  # Yeni input
        required: false
        default: 'boot_img'

jobs:
  FCE:
    name: ${{ github.event.inputs.track }}
    runs-on: ubuntu-latest
    env:
      URL: ${{ github.event.inputs.url }}
      IMAGE_TYPE: ${{ github.event.inputs.image_type || 'boot_img' }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip p7zip-full aria2
          git clone https://github.com/vm03/payload_dumper.git tools
          pip install -r ./tools/requirements.txt

      - name: Download firmware
        run: |
          aria2c -x 7 -s 7 -k 1M --out=firmware.zip "$URL"
          7z x firmware.zip -oextracted
          rm firmware.zip

      - name: Extract images
        run: |
          cd extracted
          rom_name=$(basename "$URL" .zip)
          mkdir -p ../release

          if [ "$IMAGE_TYPE" = "boot_img" ]; then
            if [ -f "boot.img" ]; then
              echo "Found boot.img directly in ZIP."
              7z a "../release/boot_img_${rom_name}.zip" "boot.img"
            elif [ -f "payload.bin" ]; then
              echo "Extracting boot.img from payload.bin..."
              ../tools/payload_dumper.py --out . --images boot payload.bin
              if [ -f "boot.img" ]; then
                7z a "../release/boot_img_${rom_name}.zip" "boot.img"
              else
                echo "boot.img not found in payload."
                exit 1
              fi
            else
              echo "Neither boot.img nor payload.bin found."
              exit 1
            fi
          elif [ "$IMAGE_TYPE" = "recovery_img" ]; then
            if [ -f "recovery.img" ]; then
              echo "Found recovery.img directly in ZIP."
              7z a "../release/recovery_img_${rom_name}.zip" "recovery.img"
            elif [ -f "payload.bin" ]; then
              echo "Extracting recovery.img from payload.bin..."
              ../tools/payload_dumper.py --out . --images recovery payload.bin
             
