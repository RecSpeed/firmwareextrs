name: FCE

on:
  workflow_dispatch:
    inputs:
      url:
        required: true
      get:
        required: true
      track:
        required: true

jobs:
  FCE:
    name: ${{ github.event.inputs.track }}
    runs-on: ubuntu-latest

    env:
      URL: ${{ github.event.inputs.url }}
      GET: ${{ github.event.inputs.get }}
      TRACK: ${{ github.event.inputs.track }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip p7zip-full aria2
          git clone https://github.com/vm03/payload_dumper.git tools
          pip install -r ./tools/requirements.txt

      - name: Download firmware
        run: |
          aria2c -x 8 -s 8 --out=firmware.zip "$URL"
          7z x firmware.zip -o./ || exit 1
          rm firmware.zip

      - name: Extract boot.img
        run: |
          if [ -f "payload.bin" ]; then
            ./tools/payload_dumper.py --images boot --out . payload.bin
          else
            echo "payload.bin not found"
          fi

      - name: Package boot.img
        run: |
          rom_name=$(basename "$URL" .zip)
          if [ -f "boot.img" ]; then
            7z a "boot_img_${rom_name}.zip" boot.img
          else
            echo "boot.img not found, marking failure"

            FILE="v.json"
            NEW_ENTRY='"'${rom_name}'": {
              "boot_img_zip": "false"
            }'

            if [ ! -f "$FILE" ]; then
              echo -e "{\n$NEW_ENTRY\n}" > "$FILE"
            else
              sed -i '$d' "$FILE"
              echo -e ",\n$NEW_ENTRY\n}" >> "$FILE"
            fi

            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add v.json
            git commit -m "mark failure for $rom_name"
            git push

            exit 1
          fi

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: auto
          files: boot_img_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update v.json (success)
        run: |
          rom_name=$(basename "$URL" .zip)
          FILE="v.json"
          LINK="https://github.com/RecSpeed/firmwareextrs/releases/download/auto/boot_img_${rom_name}.zip"

          NEW_ENTRY='"'${rom_name}'": {
            "boot_img_zip": "true",
            "boot_img_link": "'$LINK'"
          }'

          if [ ! -f "$FILE" ]; then
            echo -e "{\n$NEW_ENTRY\n}" > "$FILE"
          else
            sed -i '$d' "$FILE"
            echo -e ",\n$NEW_ENTRY\n}" >> "$FILE"
          fi

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add v.json
          git commit -m "update v.json with $rom_name"
          git push
